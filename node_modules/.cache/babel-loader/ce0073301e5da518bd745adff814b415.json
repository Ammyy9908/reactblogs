{"ast":null,"code":"var _jsxFileName = \"/Users/sumitkumar/Desktop/React/blog/client/src/components/Signup.jsx\";\nimport React from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\n\nconst bcrypt = require('bcryptjs');\n\nconst axios = require('axios');\n\nexport default class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        margin: \"150px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"display-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }, \"Signup\"), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formFname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 19\n      }\n    }, \"Full Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Full Name\",\n      autoComplete: \"false\",\n      name: \"first_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 19\n      }\n    }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"email\",\n      placeholder: \"Enter email\",\n      name: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 19\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      name: \"password1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"formBasicPassword2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 19\n      }\n    }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Confirm Password\",\n      name: \"password2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"dark\",\n      onClick: e => {\n        const form = e.target.parentElement;\n        const name = form.first_name.value;\n        const email = form.email.value;\n        const password1 = form.password1.value;\n        const password2 = form.password2.value;\n        const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n        if (!name || !email || !password1 || !password2) {\n          console.log('All Fields Required');\n        } else {\n          //Validate email using regex\n          if (reg.test(email)) {\n            //check if password 1 is matched with password2\n            if (password1 != password2) {\n              console.log('make sure two Password Matched!');\n            } else {\n              console.log('All correct! now proceed'); // hash the plain text password to hashed password before saving to db\n\n              const saltRounds = 10;\n              bcrypt.genSalt(saltRounds, function (err, salt) {\n                bcrypt.hash(password1, bcrypt.genSaltSync(10), function (err, hash) {\n                  // Store hash in your password DB.\n                  const User = {\n                    name: first_name,\n                    email: email,\n                    password: hash\n                  };\n                  axios.post('http://localhost:5000/register', User).then(res => {\n                    if (res.data) {\n                      window.location = \"/login\";\n                    } else {\n                      alert(\"Something Wrong With Server!\");\n                    }\n                  }).catch(error => {\n                    console.log(error);\n                  });\n                });\n              });\n            }\n          } else {\n            console.log('Bad email');\n          }\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"Register\"))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/sumitkumar/Desktop/React/blog/client/src/components/Signup.jsx"],"names":["React","Form","Button","Container","Row","Col","bcrypt","require","axios","SignUp","Component","constructor","props","render","margin","e","form","target","parentElement","name","first_name","value","email","password1","password2","reg","console","log","test","saltRounds","genSalt","err","salt","hash","genSaltSync","User","password","post","then","res","data","window","location","alert","catch","error"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nconst bcrypt = require('bcryptjs');\nconst axios = require('axios');\n\n\nexport default class SignUp extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n  }\n  render() {\n    return (\n      <div>\n        <Container>\n          <Row style={{ margin: \"150px 0\" }}>\n            <Col className=\"col-lg-6\">\n              <h1 className=\"display-3\">Signup</h1>\n              <Form>\n                <Form.Group controlId=\"formFname\">\n                  <Form.Label>Full Name</Form.Label>\n                  <Form.Control\n                    type=\"text\"\n                    placeholder=\"Full Name\"\n                    autoComplete=\"false\"\n                    name=\"first_name\"\n                  />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control \n                  type=\"email\" \n                  placeholder=\"Enter email\"\n                  name=\"email\"\n                   />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control \n                  type=\"password\"\n                    placeholder=\"Password\"\n                    name=\"password1\"\n                     />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword2\">\n                  <Form.Label>Confirm Password</Form.Label>\n                  <Form.Control\n                    type=\"password\"\n                    placeholder=\"Confirm Password\"\n                    name=\"password2\"\n                  />\n                </Form.Group>\n                <Button variant=\"dark\" onClick={(e)=>{\n                    const form = e.target.parentElement;\n                    const name = form.first_name.value;\n                    const email = form.email.value;\n                    const password1 = form.password1.value;\n                    const password2 = form.password2.value;\n                    const reg = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n                    if(!name || !email || !password1 || !password2)\n                    {\n                        console.log('All Fields Required');\n                    }\n                    else{\n                        //Validate email using regex\n                        if(reg.test(email)){\n                            //check if password 1 is matched with password2\n                            if(password1!=password2){\n                                console.log('make sure two Password Matched!');\n                            }\n                            else{\n                                console.log('All correct! now proceed');\n                                // hash the plain text password to hashed password before saving to db\n                                const saltRounds = 10;\n                                bcrypt.genSalt(saltRounds, function(err, salt) {\n                                  bcrypt.hash(password1, bcrypt.genSaltSync(10), function(err, hash) {\n                                        // Store hash in your password DB.\n                                        const User = {\n                                          name:first_name,\n                                          email:email,\n                                          password:hash,\n                                        }\n                                        axios.post('http://localhost:5000/register', User)\n                                      .then((res) => {\n                                        if(res.data){\n                                          window.location = \"/login\";\n                          \n                                        }\n                                        else{\n                                          alert(\"Something Wrong With Server!\");\n                                        }\n                                          }).catch((error) => {\n                                          console.log(error);\n                                           });\n                                    });\n                                });\n                                \n                            }\n                        }\n                        else{\n                            console.log('Bad email');\n                        }\n                    }\n                }}>\n                  Register\n                </Button>\n              </Form>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}